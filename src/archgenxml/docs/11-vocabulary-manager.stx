id: vocabulary-manager
title: Third Party Product Integration: ATVocabularyManager
allowDiscussion: 1
subject: 
description: ATVocabularyManager is a product for letting site managers define vocabularies for fields through-the-web or by import from XML files. 
  
  
  
  ArchGenXML can generate the necessary code to use this product.
creators: drzoltron
effectiveDate: 2004/11/30 18:34:22 Universal
expirationDate: None
language: en
creation_date: 2005/04/24 11:43:13.662 GMT-4
modification_date: 2005/12/09 14:21:16.928 Universal
Content-Type: text/structured

ATVM manages dynamic vocabularies. It installs a tool, where a site Manager can add, change and delete vocabularies. These vocabularies can then be used anywhere on the site.

You can download ATVocabularyManager from the archetypes subversion repository: "http://svn.plone.org/archetypes/ATVocabularyManager/":http://svn.plone.org/archetypes/ATVocabularyManager/

Adding ATVM-vocabs to your UML model is quite easy. 

1. Add a selection or multiselection field to your type.

2. Add a tag 'vocabulary:name' and give it a name, let's say 'countries'

3. Add a tag 'vocabulary:type' with the value 'ATVocabularyManager'

We are now finished with the UML. Save it and let AGX do the work. What still is missing, is to install the countries vocabulary. Therefore:

1. Add a file called 'AppInstall.py' in the /Extensions folder of your product
  
2. Add the following code::

   from Products.ATVocabularyManager.config import TOOL_NAME as ATVOCABULARYTOOL
   from Products.CMFCore.utils import getToolByName

   def install(self):
     """
       let's install the countries vocab
     """

     vocabs = {}

     vocabs['countries'] = (
            ('ice', u'Iceland'),
            ('nor', u'Norway'),
            ('fin', u'Finland'),
            ('tyr', u'Tyrol'),
            ('auf', u'Ausserfern'),
        )

     portal=getToolByName(self,'portal_url').getPortalObject()
     atvm = getToolByName(portal, ATVOCABULARYTOOL)

     for vkey in vocabs.keys():
            # create vocabulary if it doesnt exist:
            vocabname = vkey
            if not hasattr(atvm, vocabname):
                # print >>out, "adding vocabulary %s" % vocabname
                atvm.invokeFactory('SimpleVocabulary', vocabname)
            vocab = atvm[vocabname]
            for (ikey, value) in vocabs [vkey]:
                if not hasattr(vocab, ikey):
                    vocab.invokeFactory('SimpleVocabularyTerm', ikey)
                    vocab[ikey].setTitle(value)

This sets up a vocabulary 'countries' with the given values, and registers it with ATVocabularyManager.
