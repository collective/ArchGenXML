<dtml-let assocs="klass.getFromAssociations(aggtypes=['none','aggregation','composite'])"
          atts="klass.getAttributeDefs()"
          dependentImports="generator.generateDependentImports(klass)"
          additionalImports="generator.generateAdditionalImports(klass)"
          taggedImports="generator.getImportsByTaggedValues(klass)"
          vars="atts+[a.toEnd for a in assocs]">
<dtml-var "generator.getProtectedSection(parsed_class, 'module-header')">

from zope.interface import implements

from plone.portlets.interfaces import IPortletDataProvider
from plone.app.portlets.portlets import base

from Products.CMFPlone import PloneMessageFactory as _

from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile

class I<dtml-var "klass.getName()">(IPortletDataProvider):
    """A portlet which renders the cart.
    """

class Assignment(base.Assignment):

    implements(I<dtml-var "klass.getName()">)

    title = _(u'<dtml-var "klass.getTaggedValue('label',klass.getName())">')

<dtml-var "generator.getProtectedSection(parsed_class,'assignment-body',ind=1)">


class Renderer(base.Renderer):

    render = ViewPageTemplateFile('templates/<dtml-var "klass.getTaggedValue('template_name',klass.getName())">')

    def __init__(self, *args):
        base.Renderer.__init__(self, *args)
<dtml-var "generator.getProtectedSection(parsed_class,'__init__ method',2)">


<dtml-var "generator.generateImplements(klass,[p.getCleanName() for p in klass.getGenParents()])">
<dtml-var "generator.getProtectedSection(parsed_class,'class-header_Renderer',1)">
<dtml-in "generator.getMethodsToGenerate(klass)[0]">
<dtml-let m="_['sequence-item']">
<dtml-if "m.getParent().__class__.__name__=='XMIInterface'">
    #from Interface <dtml-var "m.getParent().getName()">:
</dtml-if>
<dtml-if "parsed_class and m.getCleanName() in parsed_class.methods.keys()">
<dtml-var "parsed_class.methods[m.getCleanName()].getSrc()">
<dtml-else>
<dtml-let param="', '.join(m.getParamNames())">
    def <dtml-var "m.getName()">(self<dtml-if param>, <dtml-var param></dtml-if>):
</dtml-let>
        pass

</dtml-if>
<dtml-if "m.isStatic()">
<dtml-var "m.getName()"> = staticmethod(<dtml-var "m.getName()">)
</dtml-if>
</dtml-let>
</dtml-in>

<dtml-in "[m for m in generator.getMethodsToGenerate(klass)[1]]">

<dtml-var "_['sequence-item'].getSrc()">
</dtml-in>


class AddForm(base.NullAddForm):

    def create(self):
        return Assignment()

<dtml-var "generator.getProtectedSection(parsed_class,'addform-body',ind=1)">

<dtml-var "generator.getProtectedSection(parsed_class,'module-footer')"></dtml-let>
