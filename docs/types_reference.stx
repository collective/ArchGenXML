Field types

  The following field types are available by default in ArchGenXML. The shorthand type name is listed, with the related Archetypes field name in parentheses. Note that you can set any other field type by importing your field object using the 'import' tagged value on a class and then setting the field name to the python type of your field, minus the 'Field' suffix. Thus, if you have a field 'CustomField', you can import its class and set the type of the relevant attribute to 'Custom'.

The widget specifications below refer to the default widgets ArchGenXML and/or Archetypes picks for each field. You can override this with the 'widget:type' stereotype.

string (StringField) -- A simple string.

  o Uses widget: SelectionWidget

text (TextField) -- A simple text box

  o Uses widget: TextAreaWidget

richtext (TextField) -- A text field with a WYSIWYG editor (where available) and rich text entry using HTML, StructuredText etc.

  o Uses widget: RichWidget

  o Sets attributes:

  o  allowable_content_types = ('text/plain','text/structured','text/html','application/msword',)

  o  default_output_type = 'text/html'

boolean (BooleanField) -- A yes/no type checkbox. 

  o Uses widget: BooleanWidget

integer (IntegerField) -- An integer.

  o Uses widget: IntegerWidget
  
fixedpoint (FixedPointField) -- A fixed point number.

  o Uses widget: DecimalWidget

float (FloatField) -- A floating point number.

  o Uses widget: DecimalWidget
  
lines (LinesField) -- A list, entered in a text box as one item per line. The value of the field will be a python tuple.

  o Uses widget: LinesWidget

selection (StringField) -- A string selected from a listbox. You must set the 'vocabulary' stereotype on your class to a python list (e.g. 'python:[1,2,3]'), an Archetypes DisplayList (potentially defined in config.py or elsewhere) or the name (in quotes) of a method found on the class which will provide a python list or DisplayList defining the vocabulary for the selection box.

  o Uses widget: SelectionWidget

multiselection (LinesField) -- A list, selected from a list box. You must set the 'vocabulary' stereotype on your class to a python list (e.g. 'python:[1,2,3]'), an Archetypes DisplayList (potentially defined in config.py or elsewhere) or the name (in quotes) of a method found on the class which will provide a python list or DisplayList defining the vocabulary for the selection box.

  o Uses widget: MultiSelectionWidget

  o Sets attributes:

    o  multiValued = 1

date (DateTimeField) -- A date/time.

  o Uses widget: CalendarWidget

computed (ComputedField) -- A computed value. You must set the 'expression' tagged value to a valid expression, which will be computed when the field is displayed. 

  o Uses widget: ComputedWidget

file (FileField) -- An uploaded file.

  o Uses widget: FileWidget

  o Sets attributes:

    o  storage = AttributeStorage()

image (ImageField) -- An uploaded image.

  o Sets attributes:

    o  storage = AttributeStorage()

photo (PhotoField) -- An image field used to upload a photo, which can be displayed in different sizes.

  o Uses widget: ImageWidget.

reference (ReferenceField) -- A reference to one or more (depending on the value of the 'multiValued' stereotype) other Archetypes objects. See the Archetypes documentation for details on how to control a reference field.

  o Uses widget: ReferenceWidget

backreference (BackReferenceField) -- TODO: Describe BackReference support.
