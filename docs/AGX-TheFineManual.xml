<?xml version="1.0" encoding="ISO-8859-15"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book>
  <title>ArchGenXML - The Fine Manual</title>

  <chapter>
    <title>Introduction</title>

    <para><emphasis role="bold">This manual targets ArchGenXML Version
    1.1.</emphasis></para>

    <sect1>
      <title>What is ArchGenXML?</title>

      <para>With ArchGenXML you can create working python code without writing
      one single line of python. It is is a commandline utility that generates
      fully operational Plone applications (Products) based on the Archetypes
      framework from UML models using XMI (.xmi, .zargo, .zuml) files.</para>

      <para>Design your Archetypes (code for content objects in plone) offline
      using a UML design tool like Poseidon or ObjectDomain. Export the UML to
      XMI or XSD and use ArchGenXML to generate Phyton code for use as a
      Product. This new Product is available as a new item (document) type in
      the Plone userinterface.</para>

      <para>This time the tool is not round-trip enabled: Generated code can't
      be back-converted into XMI. But you can re-generate over existing code:
      The Method bodys and some other protected sections are kept.</para>

      <para>ArchGenXML is hosted at <ulink
      url="http://sourceforge.net/projects/archetypes">sourceforge.net as a
      subproject of the archetypes project</ulink>. It's under GNU General
      Public Licence 2 or later.</para>
    </sect1>

    <sect1>
      <title>Why should I use ArchGenXML?</title>

      <para>Major reasons:</para>

      <itemizedlist>
        <listitem>
          <para>You want to save time,</para>
        </listitem>

        <listitem>
          <para>You are a lazy programmer,</para>
        </listitem>

        <listitem>
          <para>You don't like to reinvent the wheel,</para>
        </listitem>

        <listitem>
          <para>You dont like copy and pasting code and bugs,</para>
        </listitem>

        <listitem>
          <para>You make heavy use of references and interfaces,</para>
        </listitem>

        <listitem>
          <para>You have big projects with many different custom types,</para>
        </listitem>

        <listitem>
          <para>You structured model- and pattern-driven software
          development,</para>
        </listitem>

        <listitem>
          <para>You want to maintain your project also in future without
          getting headache,</para>
        </listitem>

        <listitem>
          <para>and many more good and odd other reasons.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Contribution</title>

      <para>The project initially started by Phil Auersperg. Thanks his
      lazyness!</para>

      <variablelist>
        <varlistentry>
          <term>Authors:</term>

          <listitem>
            <para>Phil Auersperg (Project Leader), BlueDynamics GmbH,
            <email>phil@bluedynamics.com</email>,</para>

            <para>Jens Klein (Developer and Doc-Writer), jens quadrat OEG,
            <email>jens.klein@jensquadrat.de</email>,</para>

            <para>Fabiano Weimar dos Santos (Ideas, Testing, Bugfixing),
            Weimar Desenvolvimento e Consultoria em Informatica Ltda.,
            xiru@xiru.org</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Sponsors</term>

          <listitem>
            <itemizedlist>
              <listitem>
                <para>Xiru.org, Brazil (Fabiano Weimar dos Santos) sponsors a
                valuable amount of money into workflow support (State diagrams
                -&gt; DCWorkflow, will go into release 1.2),</para>
              </listitem>

              <listitem>
                <para>PilotSystems, Paris, France (David Sapiro),</para>
              </listitem>

              <listitem>
                <para>OpenSource.ag, Innsbruck, Austria (Georg Pleger).</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>If you want to contribute ArchGenXML by improving the code,
      helping with documentation or sponsoring money just contact Phil
      Auersperg.</para>
    </sect1>
  </chapter>

  <chapter>
    <title>Installation</title>

    <sect1>
      <title>ArchGenXML</title>

      <sect2>
        <title>Preconditions</title>

        <para>You need a working Python Version 2.1 or later. Version 2.3 is
        recommended, with 2.1 some minor features are disabled.</para>

        <para>Also you need Plone 2 (choose latest stable release) and its
        dependencies to see your generated code in action.</para>
      </sect2>

      <sect2>
        <title>Download</title>

        <para>You need to download a release tar-ball from sourceforge. You'll
        find it in the <ulink
        url="http://sourceforge.net/project/showfiles.php?group_id=75272&amp;package_id=103241">releases
        area of archetypes</ulink>. Choose the latest version of your flavor:
        Final, or one of the cutting edge development releases.</para>

        <para>Its also possible to fetch the code of cutting edge development
        from CVS. How to check it out is described well in sourceforge's
        manuals. Project name is <literal>archetypes</literal> and module name
        is <literal>ArchGenXML</literal>.</para>
      </sect2>

      <sect2>
        <title>Installation</title>

        <para>Simply un-tar downloaded file to a place of your choice and
        remember the path to <filename>ArchGenXML.py</filename>.</para>

        <para>I suggest to give the file execution permissions and make a
        symbolic link at a place mentioned in your PATH environment
        settings.</para>

        <para>Note: The installation will be handled bei dist-utils in one of
        the next releases and will become much easier then.</para>
      </sect2>

      <sect2>
        <title>Additional Suggested Software</title>

        <para>The following modules are suggested for full featured default
        behaviour.</para>

        <sect3>
          <title>Suggested for code generation process with ArchGenXML</title>

          <variablelist>
            <varlistentry>
              <term>i18ndude</term>

              <listitem>
                <para>Without it the generation of user interface i18n
                features are disabled. Download and install
                <literal>i18ndude</literal> from project <ulink
                url="http://sourceforge.net/projects/plone-i18n">plone-i18n on
                sourceforge.net</ulink>.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>stripogram</term>

              <listitem>
                <para>Some UML Tools are producing HTML documentation elements
                in XMI. Stripogram converts them into plain text. Without
                having stripogram installed this feature is disabled. Download
                and install stripogram from project <ulink
                url="http://sourceforge.net/project/showfiles.php?group_id=1083&amp;package_id=34645">squishdot
                on sourceforge.net</ulink>.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>

        <sect3>
          <title>Suggested for running generated code</title>

          <variablelist>
            <varlistentry>
              <term>I18NArchetypes</term>

              <listitem>
                <para>XXX TODO</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>ATVocabularyManager</term>

              <listitem>
                <para>Enables usage of custom dynamic vocabularies. Download
                and install <literal>ATVocabularyManager</literal> from <ulink
                url="http://cvs.sourceforge.net/viewcvs.py/archetypes/ATVocabularyManager/">archetypes
                CVS</ulink>.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </sect3>
      </sect2>
    </sect1>

    <sect1>
      <title>UML Tools</title>

      <para>ArchGenXML processes models stored in <ulink
      url="???">XMI</ulink>. This XML format isn't intended to be written in a
      plain text editor nor in a tree based XML editor. It's a good idea to
      use a UML design tool. Here is more or less complete list of tools. If
      you dear reader know another tool, have more detailed information or
      have experience with a tool in combination with ArchGenXML please write
      the author a short e-mail.</para>

      <variablelist>
        <varlistentry>
          <term>Poseidon (by Gentleware)</term>

          <listitem>
            <para>Website and download: <ulink
            url="http://www.gentleware.com/">gentleware.com</ulink></para>

            <itemizedlist>
              <listitem>
                <para>commercial, Community Edition free available,</para>
              </listitem>

              <listitem>
                <para>xmi version 1.2,</para>
              </listitem>

              <listitem>
                <para>written in JAVA, runs on most platforms,</para>
              </listitem>

              <listitem>
                <para>based on ArgoUML,</para>
              </listitem>

              <listitem>
                <para>stores the model native as xmi + diagram information in
                .zuml files (zip files),</para>
              </listitem>

              <listitem>
                <para>some known, but non-critical bugs (see Appendix UML Tool
                Tricks),</para>
              </listitem>

              <listitem>
                <para>needs lots of memory and a fast CPU,</para>
              </listitem>

              <listitem>
                <para>authors choice.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>ArgoUML</term>

          <listitem>
            <para>Website and download: <ulink
            url="???">argouml.tigris.org</ulink></para>

            <itemizedlist>
              <listitem>
                <para>free software</para>
              </listitem>

              <listitem>
                <para>written in JAVA, runs on most platforms,</para>
              </listitem>

              <listitem>
                <para>stores the model native as xmi + diagram information in
                .zargo files (zip files),</para>
              </listitem>

              <listitem>
                <para>some known, but non-critical bugs,</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>ObjectDomain</term>

          <listitem>
            <para>Website and download: <ulink
            url="???">objectdomain.com</ulink></para>

            <itemizedlist>
              <listitem>
                <para>commercial, free demo for &lt;= 30 classes,</para>
              </listitem>

              <listitem>
                <para>written in JAVA, runs on most platforms,</para>
              </listitem>

              <listitem>
                <para>needs to export model. Stores in own text-based
                format.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Powerdesigner (by Sybase)</term>

          <listitem>
            <para>Website and download: <ulink
            url="???">sybase.com</ulink></para>

            <itemizedlist>
              <listitem>
                <para>xmi version 1.1,</para>
              </listitem>

              <listitem>
                <para>needs to export model. </para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Umbrello (KDE)</term>

          <listitem>
            <para>Website and download: <ulink
            url="???">uml.sourceforge.net</ulink></para>

            <itemizedlist>
              <listitem>
                <para>free software,</para>
              </listitem>

              <listitem>
                <para>runs under Linux/KDE,</para>
              </listitem>

              <listitem>
                <para>stores the model native as XMI,</para>
              </listitem>

              <listitem>
                <para>at the time of testing it, Umbrello wasn't complete and
                the XMI not 100% standard compliant.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>A much more complete list of UML tools can be found at <ulink
      url="???">www.jeckle.de/umltools.htm</ulink>.</para>
    </sect1>
  </chapter>

  <chapter>
    <title>UML </title>

    <para>UML - the Unified Modelling Language is a graphical language
    designed to describe software. To attain that goal this language has got
    several different diagram-types defined.</para>

    <para>This manual does not target in teaching you UML and object-oriented,
    model-driven software developement. There are several other fine manuals
    out in the WWW. A very good starting point is OMG's <ulink
    url="???">UML&trade; Resource Page</ulink> including it's web-links to
    tutorials.</para>

    <para>For ArchGenXML are from interest: the class-diagramm and it's
    different associations. In future versions of ArchGenXML it may be
    possible to define the workflow with state diagrams.</para>

    <para>With this language you're able to define object-oriented
    data-models. A class is the outline of an object like a building-plan.
    With ArchGenXML you define this plan. If a building can have relations to
    an other kind of building you define this with associations.</para>
  </chapter>

  <chapter>
    <title>Getting started</title>

    <para>This chapter describes the minimum to do to generate a Product with
    ArchGenXML and get it running.</para>

    <section>
      <title>Creating a minimal content type in UML</title>

      <para>Open the UML tools of your choice. Make a new UML and add a class
      diagram. Choose the tool for class creation and add a class to the
      diagram. Give it a name <classname>MyFirstAGXContent</classname> and add
      an attribute <classname>MyTextField</classname> and choose type text.
      See XMI in Example 4.1.a (file shipped with the release package).</para>

      <figure>
        <title>Example 4.1.a</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="example-4_1_a.png" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Generating the product</title>

      <para></para>
    </section>

    <section>
      <title>Installing and using the generated product</title>

      <para></para>
    </section>
  </chapter>

  <chapter>
    <title>Basic Features</title>

    <para>This chapter containes information about the features needed for
    simple content type creation.</para>

    <section>
      <title>Classes</title>

      <para></para>
    </section>

    <section>
      <title>Fields (Attributes)</title>

      <para></para>
    </section>

    <section>
      <title>Widgets</title>

      <para></para>
    </section>

    <section>
      <title>Methods</title>

      <para></para>
    </section>

    <section>
      <title>Actions</title>

      <para></para>
    </section>

    <section>
      <title>Folderish</title>

      <para></para>
    </section>

    <section>
      <title>References</title>

      <para></para>
    </section>
  </chapter>

  <chapter>
    <title>Advanced Usage</title>

    <para>This chapter describes how to use more complex approaches including
    i18n and parts used for design-pattern based developement.</para>

    <section>
      <title>Tools and Configlets</title>

      <para></para>
    </section>

    <section>
      <title>Vocabularies</title>

      <para></para>
    </section>

    <section>
      <title>Interfaces</title>

      <para></para>
    </section>

    <section>
      <title>Association Classes</title>

      <para></para>
    </section>

    <section>
      <title>Internationalization</title>

      <para></para>

      <section>
        <title>UI i18n with GNU-Gettext POT-File generation</title>

        <para></para>
      </section>

      <section>
        <title>Content i18n with I18NArchetypes</title>

        <para></para>
      </section>

      <section>
        <title>Content i18n with LinguaPlone</title>

        <para></para>
      </section>
    </section>

    <section>
      <title>Storage</title>

      <para></para>
    </section>
  </chapter>

  <chapter>
    <title>Reference Manual</title>

    <para></para>

    <section>
      <title>Command Line Options and Config File</title>

      <para></para>
    </section>

    <section>
      <title>UML Diagram</title>

      <para></para>

      <section>
        <title>Packages</title>

        <para></para>
      </section>

      <section>
        <title>Classes</title>

        <para></para>

        <section>
          <title>Stereotypes</title>

          <para></para>
        </section>

        <section>
          <title>Tagged Values</title>

          <para></para>
        </section>
      </section>

      <section>
        <title>Attributes (Fields)</title>

        <para></para>
      </section>
    </section>
  </chapter>

  <chapter>
    <title>Further Information</title>

    <para></para>
  </chapter>

  <appendix>
    <title>UML Tool Tricks</title>

    <para></para>
  </appendix>

  <appendix>
    <title>License</title>

    <para>This work is licensed under the Creative Commons
    Attribution-NonCommercial-ShareAlike License. To view a copy of this
    license, visit <ulink
    url="???">http://creativecommons.org/licenses/by-nc-sa/1.0/</ulink> or
    send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford,
    California 94305, USA.</para>
  </appendix>
</book>