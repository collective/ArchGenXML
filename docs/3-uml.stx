id: uml
title: UML 
allowDiscussion: 1
subject: 
description: A brief introduction to UML and pointers to further readings.
creators: jensens
effectiveDate: 2004/11/30 18:34:22 Universal
expirationDate: None
language: en
creation_date: 2004/11/30 16:29:12.790 US/Eastern
modification_date: 2005/12/09 14:21:16.072 Universal
Content-Type: text/structured

UML - the Unified Modelling Language - is a graphical language designed to describe software through diagrams. There are several different types of diagrams available, but the ones most relevant to ArchGenXML are:

* The class diagram

* The state diagram

Class diagrams are used to draw interfaces, content types (represented as classes) and tools (represented as classess with the 'portal_tool' stereotype), as well as the attributes and public operations on these. In addition, associations in the diagram show how objects are aggregated within or referenced from one another.

The goal of model-driven development is to create the "blueprints" for your software in a well-defined, easily-communicated format: the UML model and diagram thereof. You can design your model using visual tools until you have a structure which adequately represents your needs, and ArchGenXML will generate the necessary code. 

You probably have to customise that code somewhat, filling in method bodies, creating new page templates etc., but ArchGenXML takes care of all the boilerplate for you. With tagged values and stereotypes you can customise the generated code with a surprising degree of flexibility and control, and when you need to hand-code something, ArchGenXML won't overwrite your changes (provided you stick to the protected code sections, clearly marked in the source code).

This manual does not aim to teach you UML and object-oriented, model-driven software developement. There are several other fine manuals about that on the web. A very good starting point is the "OMG UML Resource Page":http://www.uml.org/ including its web-links to tutorials.

